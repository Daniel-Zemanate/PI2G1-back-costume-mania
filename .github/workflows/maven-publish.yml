# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  push:
    branches:
      - Develop

jobs:
  build:

    runs-on: self-hosted
    permissions:
      contents: read
      packages: write

    steps:    
    - name: Change permissions to working folder
      run: sudo chmod -R 777 '/home/ubuntu/actions-runner/_work/'
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Down Docker All Containers
      continue-on-error: true
      run: sudo docker stop $(sudo docker ps -a -q)

    - name: Clean Docker - Remove Containers
      continue-on-error: true
      run: sudo docker rm -f $(sudo docker ps -a -q)

    - name: Clean Docker - Remove Volumes
      continue-on-error: true
      run: sudo docker volume rm $(sudo docker volume ls -q)

    - name: Clean Docker
      continue-on-error: true
      run: sudo docker system prune -a -f

    - name: Create ENV variables on HOST from secrets
      run: |
        export DB_URL="${{ secrets.DB_URL }}"
        export DB_PORT="${{ secrets.DB_PORT }}"
        export DB_USER="${{ secrets.DB_USER }}"
        export DB_PASS="${{ secrets.DB_PASS }}"
        export DB_SERVICE="${{ secrets.DB_SERVICE }}"
    - name: Copy .env
      run: |
        cp .env-aws .env

    - name: Build with Maven
      run: sudo mvn -B package --file pom.xml

    - name: Build Docker Compose
#      run: sudo docker compose build
      run: sudo docker-compose build

    - name: Run Docker Compose
#      run: sudo docker compose -f "docker-compose.yml" up -d
      run: sudo docker-compose -f "docker-compose.yml" up -d
